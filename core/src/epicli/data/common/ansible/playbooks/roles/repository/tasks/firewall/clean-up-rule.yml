---
- name: Set firewall facts
  import_role:
    name: firewall
    tasks_from: set-common-facts

- name: Check if file with modified zones exists
  stat:
    path: "{{ epiphany_tmp_persistent_dir }}/firewall/temporarily-modified-zones.yml"
  register: modified_zones_file_stat

- name: Load list of temporary modified zones
  block:
    - name: Load file with modified zones
      slurp:
        src: "{{ epiphany_tmp_persistent_dir }}/firewall/temporarily-modified-zones.yml"
      register: modified_zones_yml

    - name: Load list of temporary modified zones
      set_fact:
        modified_zones: "{{ modified_zones_yml.content | b64decode | from_yaml }}"
  when:
    - modified_zones_file_stat.stat.exists

# Note: Current zone while running 'teardown' may be different than was when 'setup'

- name: Remove temporary rule for epirepo added by repository role
  block:
    # If zone was modified by firewall role, it shouldn't be restored to not overwrite applied configuration
    - name: Set list of zones for which configuration should be resored
      set_fact:
        zones_to_restore: >-
          {{ modified_zones | dict2items(key_name='zone')
                            | rejectattr('value.modified_by_roles', 'contains', 'firewall')
                            | map(attribute='zone') | list }}

    # Normally there shouldn't be more than one zone to restore.
    # However, more than one zone is possible when previous installation was not completed.
    - name: Restore configuration of modified zone from backup
      copy:
        src: "{{ modified_zones[item].backup_path }}"
        dest: /etc/firewalld/zones/{{ item }}.xml
        remote_src: yes
        mode: preserve
      register: restore_modified_zone_from_backup
      loop: "{{ zones_to_restore }}"

    - name: Clean up zone backups
      file:
        path: "{{ item }}"
        state: absent
      loop: >-
        {{ modified_zones | dict2items | map(attribute='value')
                          | selectattr('backup_path', 'defined')
                          | map(attribute='backup_path') | list | unique }}
  when:
    - modified_zones_file_stat.stat.exists

- name: Remove temporary rule for epirepo added by firewall role
  block:
    - name: Set list of zones for which temporary rule should be removed
      set_fact:
        zones_to_process: >-
          {{ modified_zones | dict2items(key_name='zone')
                            | selectattr('value.modified_by_roles', 'contains', 'firewall')
                            | map(attribute='zone') | list }}

    - name: Check if zone configuration file exists
      stat:
        path: /etc/firewalld/zones/{{ item | lower }}.xml
      register: zone_config_file_stat
      loop: "{{ zones_to_process }}"

    - name: Remove temporary firewall rule for epirepo added by firewall role
      blockinfile:
        path: /etc/firewalld/zones/{{ item | lower }}.xml
        marker_begin: BEGIN
        marker_end: END
        marker: <!-- {mark} ANSIBLE MANAGED TEMPORARY BLOCK -->
        state: absent
      register: remove_http_service_from_managed_zone
      loop: "{{ zones_to_process }}"
      loop_control:
        index_var: index
      when:
        - zone_config_file_stat.results[index].stat.exists
  when:
    - modified_zones_file_stat.stat.exists

- name: Reload firewalld to apply permanent configuration to runtime
  command: firewall-cmd --reload
  when:
    - firewall_running
    - restore_modified_zone_from_backup.changed
      or remove_http_service_from_managed_zone.changed

- name: Clean up temporary file (temporarily-modified-zones.yml)
  file:
    path: "{{ epiphany_tmp_persistent_dir }}/firewall/temporarily-modified-zones.yml"
    state: absent
  when:
    - modified_zones_file_stat.stat.exists