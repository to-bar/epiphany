---

- name: download_package | Set architecture and OS properties
  set_fact:
    arch: "{{ shared.architecture_map[ansible_architecture] }}"
    os_distribution: >-
      {{ (ansible_distribution == "Oracle Linux") | ternary('RedHat', ansible_distribution) }}
    os_distribution_version: >-
      {{ ansible_distribution_major_version if (ansible_os_family == "RedHat")
                                            else ansible_distribution_version }}

- name: Normalize properties from configuration
  block:
    - name: download_package | Clear list
      set_fact:
        package_items: []
    - name: download_package | Normalize properties from configuration
      set_fact:
        package_items: >-
          {{ package_items + [ normalized_package_item ] }}
      vars:
        normalized_package_item: >-
          {{ package_item | combine({ 'distro_version': package_item.distro_version | string })
                          | combine({ 'version': package_item.version | string })
                          | combine({ 'distros': [ package_item.distros ] if (package_item.distros is string)
                                                                          else package_item.distros }) }}
      loop: "{{ specification.downloads.packages[package_arg.id][arch] }}"
      loop_control:
        loop_var: package_item

- name: download_package | Set properties from configuration
  set_fact:
    file: >-
      {{ package_items | selectattr('version', 'match', '.*' if (package_arg.version is not defined)
                                                             else package_arg.version | string)
                       | selectattr('distros', 'contains', os_distribution)
                       | selectattr('distro_version', 'equalto', os_distribution_version)
         | first | combine({ 'arch': arch, 'id': file_arg.id, 'os_distribution': os_distribution,
                             'os_distribution_version': os_distribution_version }) }}

- name: download_package | Set dynamic properties and filter out unneeded
  set_fact:
    file: >-
      {{ file | combine({ 'distros': null }) | combine({ 'distro_version': null })
              | dict2items | selectattr('value', 'defined') | list | items2dict
              | combine({ 'dest_path': specification.remote_downloads_dir + '/' + relative_dest_path })
              | combine({ 'cached_file_path': specification.local_downloads_dir + '/' + relative_dest_path })
              | combine({ 'checksum_algorithm': 'sha256' if (file.sha256 is defined) else 'sha512' }) }}
  vars:
    relative_dest_path: >-
      {{ 'packages/' + file.id + '/' + file.version + '/' + file.arch + '/'
         + file.os_distribution + '/' + file.os_distribution_version + '/'
         + (file.url | basename) if file.url is defined else file.file_name }}

- name: download_package | Download '{{ file.id }}' v{{ file.version }}
  include_tasks: download_file_worker.yml
  vars:
    file_arg: "{{ file }}"
